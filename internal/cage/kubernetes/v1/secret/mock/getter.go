// Copyright (C) 2020 The CodeActual Go Environment Authors.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes/typed/core/v1 (interfaces: SecretsGetter)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/kubernetes/typed/core/v1"
	reflect "reflect"
)

// MockSecretsGetter is a mock of SecretsGetter interface
type MockSecretsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsGetterMockRecorder
}

// MockSecretsGetterMockRecorder is the mock recorder for MockSecretsGetter
type MockSecretsGetterMockRecorder struct {
	mock *MockSecretsGetter
}

// NewMockSecretsGetter creates a new mock instance
func NewMockSecretsGetter(ctrl *gomock.Controller) *MockSecretsGetter {
	mock := &MockSecretsGetter{ctrl: ctrl}
	mock.recorder = &MockSecretsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecretsGetter) EXPECT() *MockSecretsGetterMockRecorder {
	return m.recorder
}

// Secrets mocks base method
func (m *MockSecretsGetter) Secrets(arg0 string) v1.SecretInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Secrets", arg0)
	ret0, _ := ret[0].(v1.SecretInterface)
	return ret0
}

// Secrets indicates an expected call of Secrets
func (mr *MockSecretsGetterMockRecorder) Secrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Secrets", reflect.TypeOf((*MockSecretsGetter)(nil).Secrets), arg0)
}
