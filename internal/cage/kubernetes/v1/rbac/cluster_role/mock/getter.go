// Copyright (C) 2020 The CodeActual Go Environment Authors.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes/typed/rbac/v1 (interfaces: ClusterRolesGetter)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/kubernetes/typed/rbac/v1"
	reflect "reflect"
)

// MockClusterRolesGetter is a mock of ClusterRolesGetter interface
type MockClusterRolesGetter struct {
	ctrl     *gomock.Controller
	recorder *MockClusterRolesGetterMockRecorder
}

// MockClusterRolesGetterMockRecorder is the mock recorder for MockClusterRolesGetter
type MockClusterRolesGetterMockRecorder struct {
	mock *MockClusterRolesGetter
}

// NewMockClusterRolesGetter creates a new mock instance
func NewMockClusterRolesGetter(ctrl *gomock.Controller) *MockClusterRolesGetter {
	mock := &MockClusterRolesGetter{ctrl: ctrl}
	mock.recorder = &MockClusterRolesGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClusterRolesGetter) EXPECT() *MockClusterRolesGetterMockRecorder {
	return m.recorder
}

// ClusterRoles mocks base method
func (m *MockClusterRolesGetter) ClusterRoles() v1.ClusterRoleInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterRoles")
	ret0, _ := ret[0].(v1.ClusterRoleInterface)
	return ret0
}

// ClusterRoles indicates an expected call of ClusterRoles
func (mr *MockClusterRolesGetterMockRecorder) ClusterRoles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterRoles", reflect.TypeOf((*MockClusterRolesGetter)(nil).ClusterRoles))
}
